{"version":3,"file":"static/js/346.8b894e3c.chunk.js","mappings":"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","sources":["schemas/SignInSchema.tsx","components/SignIn/styledComponentSignIn.ts","webpack://-demo-app-incode/./src/components/SignIn/SignIn.module.scss?a3e2","components/SignIn/SignIn.tsx","helpers/errors.tsx","helpers/regexp.tsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { inputErrors } from '../helpers/errors';\nimport { NAME_REGEXP, PASSWORD_REGEXP } from '../helpers/regexp';\n\nexport const userSchemaSignIn = Yup.object({\n  username: Yup.string()\n    .matches(NAME_REGEXP, inputErrors.MISTAKE)\n    .min(3, 'Не менше 3 символів')\n    .max(100, 'Не більше 100 символів')\n    .required(inputErrors.REQUIRED),\n  password: Yup.string()\n    .matches(PASSWORD_REGEXP, inputErrors.MISTAKE)\n    .min(8, 'Не менше 8 символів')\n    .max(30, 'Не більше 30 символів')\n    .required(inputErrors.REQUIRED),\n});\n","import { styled } from '@material-ui/styles';\nimport { TextField } from '@mui/material';\n\nexport const WhiteTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#fff',\n  },\n  '& .MuiFormHelperText-root ': {\n    color: 'red',\n  },\n  '& .css-nz481w-MuiInputBase-input-MuiInput-input ': {\n    color: '#fff',\n  },\n  '& .MuiInput-underline:after:invalid': {\n    borderBottomColor: '#fff',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#fff',\n  },\n  '& .MuiInputLabel-root': {\n    color: '#fff',\n  },\n  '& .MuiInput-underline::before': {\n    borderBottom: '2px solid #fff',\n  },\n  '& .css-2duac4': {\n    color: '#fff',\n  },\n  '& .MuiInputBase-input': {\n    color: '#fff',\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignIn_form__whgO+\",\"link\":\"SignIn_link__+zGin\"};","import { useFormik } from 'formik';\nimport { useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../helpers/hooks/hook';\nimport {\n  Typography,\n  Button,\n  Box,\n  Container,\n  IconButton,\n  InputAdornment,\n  Collapse,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { AuthOperations } from '../../redux/auth';\nimport { userSchemaSignIn } from '../../schemas/SignInSchema';\nimport { WhiteTextField } from './styledComponentSignIn';\nimport { getIsLoggedInLoading } from '../../redux/auth/selectors';\nimport s from './SignIn.module.scss';\nimport { LoginData } from '../.././types/type';\n\nconst SignIn: React.FC<LoginData> = () => {\n  const dispatch = useAppDispatch();\n  const isLoading = useAppSelector(getIsLoggedInLoading);\n  const isErrorLogged = useAppSelector(state => state.auth.isErrorLogin);\n  const [showPassword, setShowPassword] = useState(false);\n  const [open, setOpen] = useState(true);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPasswordLogin = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  const handleSubmit = async (values: LoginData) => {\n    await dispatch(\n      AuthOperations.signIn({\n        password: values.password,\n        username: values.username,\n      })\n    );\n    formik.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      username: '',\n    },\n    validationSchema: userSchemaSignIn,\n    onSubmit: handleSubmit,\n  });\n\n  const isDisabled =\n    Boolean(formik.errors.password || formik.errors.username) || isLoading;\n\n  return (\n    <Container>\n      <Box\n        sx={{\n          width: '425px',\n          pt: '48px',\n          pl: '48px',\n          pr: '48px',\n          pb: '300px',\n          bgcolor: '#1D283A',\n          mx: 'auto',\n        }}\n      >\n        <Box>\n          <Typography\n            variant=\"h4\"\n            sx={{\n              color: 'secondary.light',\n              fontSize: '36px',\n              fontWeight: 'bold',\n            }}\n          >\n            InCode\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            sx={{ color: 'primary.main', mb: '72px' }}\n          >\n            Finance\n          </Typography>\n          <Typography\n            variant=\"h4\"\n            sx={{\n              color: 'secondary.light',\n              fontSize: '56px',\n              fontWeight: 'bold',\n              mb: '48px',\n            }}\n          >\n            Sign In\n          </Typography>\n        </Box>\n\n        <form onSubmit={formik.handleSubmit} className={s.form}>\n          <WhiteTextField\n            type=\"text\"\n            label=\"User Name\"\n            variant=\"standard\"\n            required={true}\n            name=\"username\"\n            value={formik.values.username}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            helperText={formik.touched.username && formik.errors.username}\n            sx={{\n              color: '#fff',\n              mb: '24px',\n            }}\n            size=\"small\"\n          />\n\n          <WhiteTextField\n            label=\"Password\"\n            variant=\"standard\"\n            required={true}\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            helperText={formik.touched.password && formik.errors.password}\n            onBlur={formik.handleBlur}\n            sx={{\n              color: 'primary.light',\n              mb: '24px',\n              borderBottom: '2px solid #fff',\n            }}\n            size=\"small\"\n            type={showPassword ? 'text' : 'password'}\n            InputProps={{\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    sx={{ color: 'primary.light' }}\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPasswordLogin}\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={isDisabled}\n            sx={{\n              bgColor: 'primary.dark',\n              height: '44px',\n              mb: '24px',\n              fontWeight: '600',\n              fontSize: '16px',\n              lineHeight: '1.55',\n            }}\n          >\n            Sign In\n          </Button>\n          {isErrorLogged && (\n            <Box sx={{ width: '100%' }}>\n              <Collapse in={open}>\n                <Alert\n                  color=\"error\"\n                  action={\n                    <IconButton\n                      aria-label=\"close\"\n                      color=\"inherit\"\n                      size=\"small\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  }\n                >\n                  {isErrorLogged}\n                </Alert>\n              </Collapse>\n            </Box>\n          )}\n\n          <Box\n            sx={{\n              display: 'flex',\n              fontSize: '12px',\n              mx: 'auto',\n            }}\n          >\n            <Typography\n              variant=\"subtitle2\"\n              sx={{\n                fontSize: '12px',\n                color: 'primary.light',\n                lineHeight: '1.55',\n                mr: '5px',\n              }}\n            >\n              Don't have account yet?\n            </Typography>\n            <Link to=\"/\" className={s.link}>\n              New Account\n            </Link>\n          </Box>\n        </form>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignIn;\n//\n","export const inputErrors = {\n  MISTAKE: 'Поле містить помилку',\n  REQUIRED: 'Необхідно заповнити поле',\n  MATCH: 'Пароль відрізняється',\n};\n","export const NAME_REGEXP = /^[^\\W_].*$/;\n\nexport const EMAIL_REGEXP = /^[^-\\s]\\S+@\\S+\\.\\S*[^-]$/;\n\nexport const PASSWORD_REGEXP = /^[^-.\\s]\\S*$/;\n"],"names":["userSchemaSignIn","Yup","username","matches","NAME_REGEXP","inputErrors","min","max","required","password","PASSWORD_REGEXP","WhiteTextField","styled","TextField","color","borderBottomColor","borderBottom","dispatch","useAppDispatch","isLoading","useAppSelector","getIsLoggedInLoading","isErrorLogged","state","auth","isErrorLogin","useState","showPassword","setShowPassword","open","setOpen","handleSubmit","values","AuthOperations","formik","resetForm","useFormik","initialValues","validationSchema","onSubmit","isDisabled","Boolean","errors","Container","Box","sx","width","pt","pl","pr","pb","bgcolor","mx","Typography","variant","fontSize","fontWeight","mb","className","s","type","label","name","value","onChange","handleChange","onBlur","handleBlur","helperText","touched","size","InputProps","disableUnderline","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","disabled","bgColor","height","lineHeight","Collapse","in","Alert","action","Close","display","mr","to","MISTAKE","REQUIRED","MATCH"],"sourceRoot":""}